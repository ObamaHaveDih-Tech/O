<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>Mobile Password Tool</title>
<style>
body {
  font-family: system-ui, -apple-system, Segoe UI, Roboto, Arial;
  background: #f7fafc;
  margin: 0;
  padding: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
}
.card {
  background: #fff;
  padding: 20px;
  border-radius: 12px;
  box-shadow: 0 6px 20px rgba(20,30,40,0.08);
  width: 90%;
  max-width: 400px;
  text-align: center;
  opacity: 0;
  transform: scale(0.95);
  transition: all 0.5s ease;
}
.card.active {
  opacity: 1;
  transform: scale(1);
}
h1 {
  font-size: 20px;
  margin-bottom: 12px;
}
button {
  margin-top: 10px;
  padding: 14px 16px;
  border: none;
  border-radius: 10px;
  background: #0ea5a4;
  color: #fff;
  font-size: 16px;
  cursor: pointer;
  width: 100%;
}
button.secondary { background: #64748b; }
button.back { background: #ef4444; }
input[type="number"], input[type="password"], input[type="text"] {
  width: 100%;
  padding: 12px;
  border-radius: 8px;
  border: 1px solid #ddd;
  margin-top: 8px;
  font-size: 16px;
  text-align: center;
}
.output {
  margin-top: 12px;
  padding: 12px;
  border-radius: 10px;
  background: #f1f5f9;
  word-break: break-word;
  font-family: monospace;
  cursor: pointer;
  font-size: 16px;
}
.meta { font-size: 14px; color: #475569; margin-top: 6px; }
.small { font-size: 13px; color: #94a3b8; }
.controls { display: flex; flex-direction: column; text-align: left; margin-top: 10px; }
.checkbox { display: flex; align-items: center; gap: 10px; margin: 6px 0; font-size: 16px; }
.row { display: flex; flex-direction: column; margin: 10px 0; }
.strength { height: 12px; background: #e2e8f0; border-radius: 999px; overflow: hidden; margin-top: 8px; }
.strength>i { display: block; height: 100%; width: 0; background: linear-gradient(90deg,#ef4444,#f59e0b,#10b981); transition: width 0.3s ease; }
.showpass { margin-top: 5px; background: #64748b; }
</style>
</head>
<body>

<!-- Start Screen -->
<div class="card active" id="startScreen">
<h1>Welcome</h1>
<p>Choose an option:</p>
<button onclick="showGenerator()">Start Password Generator</button>
<button onclick="showChecker()">How strong is your password?</button>
</div>

<!-- Generator Screen -->
<div class="card" id="generatorScreen">
<h1>Secure Password Generator</h1>
<div class="controls">
<div class="checkbox"><input type="checkbox" id="numbers" checked><label for="numbers">Numbers</label></div>
<div class="checkbox"><input type="checkbox" id="symbols" checked><label for="symbols">Symbols</label></div>
<div class="checkbox"><input type="checkbox" id="lowercase" checked><label for="lowercase">Lowercase</label></div>
<div class="checkbox"><input type="checkbox" id="uppercase" checked><label for="uppercase">Uppercase</label></div>
<div class="checkbox"><input type="checkbox" id="excludeAmbiguous"><label for="excludeAmbiguous">Exclude ambiguous (O,0,l,I)</label></div>
</div>
<div class="row">
<label for="length">Length</label>
<input id="length" type="number" min="4" max="256" value="16" />
</div>
<button onclick="generatePassword()">Generate</button>
<button class="secondary" onclick="copyPassword()">Copy</button>
<button class="back" onclick="goBack()">Back</button>
<div class="output" id="output" title="Click to copy">Your password will appear here</div>
<div class="meta">
<div style="display:flex;justify-content:space-between;align-items:center">
<div class="small">Entropy: <span id="entropy">—</span> bits</div>
<div class="small" id="strengthText">—</div>
</div>
<div class="strength"><i id="strengthBar"></i></div>
</div>
</div>

<!-- Password Strength Checker Screen -->
<div class="card" id="checkerScreen">
<h1>Password Strength Checker</h1>
<p>Enter your password:</p>
<input type="password" id="passwordInput" placeholder="Enter password" oninput="checkPassword()" />
<button class="showpass" onclick="toggleShowPassword()">Show/Hide Password</button>
<button class="back" onclick="backToStartFromChecker()">Back</button>
<div class="output" id="checkerOutput" title="Click to copy">Results appear here</div>
<div class="meta">
<div style="display:flex;justify-content:space-between;align-items:center">
<div class="small" id="checkerEntropy">— bits</div>
<div class="small" id="checkerStrengthText">—</div>
</div>
<div class="strength"><i id="checkerStrengthBar"></i></div>
<div class="small" id="bruteTime"></div>
</div>
</div>

<script>
/* ===== SCREEN TRANSITIONS ===== */
function showGenerator(){document.getElementById("startScreen").classList.remove("active");setTimeout(()=>{document.getElementById("startScreen").style.display="none";const gen=document.getElementById("generatorScreen");gen.style.display="block";setTimeout(()=>gen.classList.add("active"),50);generatePassword();},500);}
function goBack(){document.getElementById("generatorScreen").classList.remove("active");setTimeout(()=>{document.getElementById("generatorScreen").style.display="none";const start=document.getElementById("startScreen");start.style.display="block";setTimeout(()=>start.classList.add("active"),50);},500);}
function showChecker(){document.getElementById("startScreen").classList.remove("active");setTimeout(()=>{document.getElementById("startScreen").style.display="none";const checker=document.getElementById("checkerScreen");checker.style.display="block";setTimeout(()=>checker.classList.add("active"),50);checkPassword();},500);}
function backToStartFromChecker(){document.getElementById("checkerScreen").classList.remove("active");setTimeout(()=>{document.getElementById("checkerScreen").style.display="none";const start=document.getElementById("startScreen");start.style.display="block";setTimeout(()=>start.classList.add("active"),50);},500);}

/* ===== GENERATOR ===== */
const CHARSETS={numbers:"0123456789",symbols:"!@#$%^&*()-_=+[]{}<>?/|~:;.,",lowercase:"abcdefghijklmnopqrstuvwxyz",uppercase:"ABCDEFGHIJKLMNOPQRSTUVWXYZ"};
const AMBIGUOUS="O0lI";
function cryptoRandomInt(max){if(max<=0)return 0;const UINT32_MAX=0xFFFFFFFF;const limit=Math.floor((UINT32_MAX+1)/max)*max;const arr=new Uint32Array(1);let r;do{crypto.getRandomValues(arr);r=arr[0];}while(r>=limit);return r%max;}
function pickRandom(str){return str[cryptoRandomInt(str.length)];}
function shuffleArray(arr){for(let i=arr.length-1;i>0;i--){const j=cryptoRandomInt(i+1);[arr[i],arr[j]]=[arr[j],arr[i]];}return arr;}
function estimateEntropy(length,charsetSize){return(charsetSize<=1||length<=0)?0:(Math.log2(charsetSize)*length);}
function updateStrengthUI(bits,barId="strengthBar",textId="strengthText"){const bar=document.getElementById(barId);const text=document.getElementById(textId);bar.style.width=Math.min(100,Math.round((bits/120)*100))+"%";if(bits<40)text.textContent="Very Weak";else if(bits<60)text.textContent="Weak";else if(bits<80)text.textContent="Moderate";else if(bits<100)text.textContent="Strong";else text.textContent="Very Strong";}
function generatePassword(){const includeNumbers=document.getElementById("numbers").checked;const includeSymbols=document.getElementById("symbols").checked;const includeLower=document.getElementById("lowercase").checked;const includeUpper=document.getElementById("uppercase").checked;const excludeAmbiguous=document.getElementById("excludeAmbiguous").checked;const length=Math.max(1,parseInt(document.getElementById("length").value||"16",10));let selectedSets=[];if(includeNumbers)selectedSets.push(CHARSETS.numbers);if(includeSymbols)selectedSets.push(CHARSETS.symbols);if(includeLower)selectedSets.push(CHARSETS.lowercase);if(includeUpper)selectedSets.push(CHARSETS.uppercase);if(selectedSets.length===0){document.getElementById("output").textContent="Select at least one type.";updateStrengthUI(0);document.getElementById("entropy").textContent="0 bits";return;}let combined=selectedSets.join("");if(excludeAmbiguous){const rx=new RegExp("["+AMBIGUOUS.split("").map(c=>"\\\\"+c).join("")+"]","g");combined=combined.replace(rx,"");selectedSets=selectedSets.map(set=>set.replace(rx,""));}if(combined.length===0){document.getElementById("output").textContent="No chars available.";updateStrengthUI(0);document.getElementById("entropy").textContent="0 bits";return;}if(length<selectedSets.length){document.getElementById("output").textContent=`Length ≥ ${selectedSets.length}.`;updateStrengthUI(0);document.getElementById("entropy").textContent="0 bits";return;}const chars=[];selectedSets.forEach(set=>chars.push(pickRandom(set)));for(let i=chars.length;i<length;i++)chars.push(pickRandom(combined));shuffleArray(chars);const pwd=chars.join("");document.getElementById("output").textContent=pwd;const bits=estimateEntropy(length,new Set(combined).size);document.getElementById("entropy").textContent=Math.round(bits)+" bits";document.getElementById("checkerEntropy").textContent=Math.round(bits)+" bits";updateStrengthUI(bits,"checkerStrengthBar","checkerStrengthText");}

/* ===== COPY ===== */
function copyPassword(){const out=document.getElementById("output").textContent;if(!out||out.includes("password will"))return;navigator.clipboard.writeText(out).then(()=>{document.getElementById("output").textContent="Copied ✓";setTimeout(()=>generatePassword(),800);});}

/* ===== CHECKER ===== */
function checkPassword(){const pwd=document.getElementById("passwordInput").value;if(!pwd){document.getElementById("checkerOutput").textContent="Enter a password.";document.getElementById("bruteTime").textContent="";document.getElementById("checkerEntropy").textContent="— bits";document.getElementById("checkerStrengthText").textContent="—";document.getElementById("checkerStrengthBar").style.width="0";return;}let charsetSize=0;if(/[0-9]/.test(pwd))charsetSize+=10;if(/[a-z]/.test(pwd))charsetSize+=26;if(/[A-Z]/.test(pwd))charsetSize+=26;if(/[^0-9a-zA-Z]/.test(pwd))charsetSize+=32;const entropy=Math.log2(Math.pow(charsetSize,pwd.length));document.getElementById("checkerOutput").textContent=`Entropy: ${entropy.toFixed(1)} bits`;document.getElementById("checkerEntropy").textContent=Math.round(entropy)+" bits";updateStrengthUI(entropy,"checkerStrengthBar","checkerStrengthText");const guesses=Math.pow(2,entropy);const seconds=guesses/1e12;document.getElementById("bruteTime").textContent=`Brute-force time: ${formatSeconds(seconds)}`;}
function formatSeconds(sec){if(sec<60)return sec.toFixed(2)+" sec";if(sec<3600)return (sec/60).toFixed(2)+" min";if(sec<86400)return (sec/3600).toFixed(2)+" hr";if(sec<31536000)return (sec/86400).toFixed(2)+" days";return (sec/31536000).toFixed(2)+" yr";}
function toggleShowPassword(){const field=document.getElementById("passwordInput");field.type=field.type==="password"?"text":"password";}
</script>

</body>
</html>
